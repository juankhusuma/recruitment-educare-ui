import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import SearchBar from "../components/SearchBar";
import { SearchContext } from "../context/Search";
import { useFetch } from "../hooks/useFetch";
import { SearchedGIF } from "../interfaces/SearchedGIF";
import { TrendingGIF } from "../interfaces/TrendingGIF";

interface HomeProps {
  trending: TrendingGIF;
}

const Home: NextPage<HomeProps> = ({ trending }) => {
  const [search, setSearch] = useState<string>("");
  const [url, setURL] = useState<string>("");
  const [searchedGIF, loading, error] = useFetch<SearchedGIF>(url);

  useEffect(() => {
    setURL(
      () =>
        `https://api.giphy.com/v1/gifs/search?api_key=${process.env.NEXT_PUBLIC_GIPHY_API_TOKEN}&q=${search}&limit=25&offset=0&rating=g&lang=en`
    );
  }, [search]);

  return (
    <div>
      <Head>
        <title>GIPHY</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="mx-10">
        <SearchContext.Provider value={{ search, setSearch }}>
          <SearchBar />
          {search === "" && (
            <div className="text-white mt-10">
              <h1 className="text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-purple-800 font-extrabold text-2xl text-center w-full mb-8">
                Hottest GIFs of the Day
              </h1>
              <div className="flex flex-wrap justify-center items-center">
                {trending?.data?.map((gif) => {
                  const { images } = gif;
                  return (
                    <img
                      key={images.fixed_height.hash}
                      src={images.fixed_height.url}
                      width={images.fixed_height.width}
                      height={images.fixed_height.height}
                    />
                  );
                })}
              </div>
            </div>
          )}
          <div className="text-white font-bold flex flex-col justify-center items-center">
            {loading && !error ? (
              <div>Loading...</div>
            ) : (
              <div className="mt-10 flex flex-wrap justify-center items-center">
                {searchedGIF?.data.map((gif) => {
                  const { images } = gif;
                  return (
                    <img
                      key={images.fixed_height.hash}
                      src={images.fixed_height.url}
                      width={images.fixed_height.width}
                      height={images.fixed_height.height}
                    />
                  );
                })}
              </div>
            )}
          </div>
        </SearchContext.Provider>
      </div>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  const res = await fetch(
    `https://api.giphy.com/v1/gifs/trending?api_key=${process.env.NEXT_PUBLIC_GIPHY_API_TOKEN}&limit=30&rating=pg-13`
  );
  const data = await res.json();

  return {
    props: {
      trending: data as TrendingGIF,
    },
  };
};

export default Home;
